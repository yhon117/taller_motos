/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import conexion.Conexion;
import controlador.RepuestoController;
import controlador.ServicioController;
import controlador.VentaController;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Moto;
import modelo.Repuesto;
import modelo.Venta;

/**
 *
 * @author jhonb
 */
public class PanelRepuestos extends javax.swing.JPanel {

    /**
     * Creates new form VistaRepuesto
     */
    ServicioController servicioCon = new ServicioController();
    RepuestoController repuestoCon = new RepuestoController();
    Venta venta = new Venta();
    VentaController ventaControl = new VentaController();

    Cliente mod;

    public PanelRepuestos() {
        initComponents();

    }

    public PanelRepuestos(Cliente mod) {
        initComponents();
        lbPrecioRepuesto.setText("");
        lbMarca.setText("");
        lbModelo.setText("");
        lbTotal.setText("");
        this.mod = mod;
        int idCliente = new Integer(mod.getIdCliente());
        DefaultComboBoxModel mostrarNombre = new DefaultComboBoxModel(repuestoCon.nombreRepuesto());
        cbRepuesto.setModel(mostrarNombre);
        DefaultComboBoxModel mostrarPlaca = new DefaultComboBoxModel(servicioCon.nombreMoto(idCliente));
        cbElejirMoto.setModel(mostrarPlaca);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        cbElejirMoto = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbRepuesto = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lbPrecioRepuesto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbModelo = new javax.swing.JLabel();
        lbMarca = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRepuesto = new javax.swing.JTable();
        btnPagar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lbTotal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Servicios"));

        jLabel2.setText("Elija la moto");

        cbElejirMoto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbElejirMotoItemStateChanged(evt);
            }
        });

        jLabel1.setText("Nombre del repuesto");

        cbRepuesto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRepuestoItemStateChanged(evt);
            }
        });
        cbRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRepuestoActionPerformed(evt);
            }
        });

        jLabel3.setText("VALOR DEL REPUESTO");

        lbPrecioRepuesto.setText("jLabel4");

        jLabel4.setText("Marca");

        jLabel6.setText("Modelo");

        lbModelo.setText("jLabel8");

        lbMarca.setText("jLabel7");

        tablaRepuesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        jScrollPane1.setViewportView(tablaRepuesto);

        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jButton1.setText("hisotrial repuesto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbTotal.setText("jLabel7");

        jLabel5.setText("TOTAL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbElejirMoto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbRepuesto, javax.swing.GroupLayout.Alignment.LEADING, 0, 171, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lbPrecioRepuesto))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbMarca))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbModelo))))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(lbTotal))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnPagar)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbElejirMoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(lbMarca))
                                .addGap(38, 38, 38))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(lbModelo)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lbPrecioRepuesto))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPagar)
                    .addComponent(jButton1)
                    .addComponent(lbTotal)
                    .addComponent(jLabel5))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbRepuestoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRepuestoItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Repuesto repuestoCon = (Repuesto) cbRepuesto.getSelectedItem();
            try {
                PreparedStatement ps;
                ResultSet rs;
                Conexion conetar = new Conexion();
                Connection con = conetar.conexion();
                String sql = "select costo from repuesto where idrepuesto=" + repuestoCon.getIdRepuesto();
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
                while (rs.next()) {
                    lbPrecioRepuesto.setText(rs.getString("costo"));

                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }

        }
        String valorSeleccionadoSer = cbRepuesto.getSelectedItem().toString();
        if (valorSeleccionadoSer.equals("seleciona un repuesto")) {

            lbPrecioRepuesto.setText("");

        }
    }//GEN-LAST:event_cbRepuestoItemStateChanged

    private void cbRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRepuestoActionPerformed
        // TODO add your handling code here:
        //        mostrarPrecio();
        //        servicioControl.cosultaPrecioServicio(lbPrecioServicio);
    }//GEN-LAST:event_cbRepuestoActionPerformed

    private void cbElejirMotoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbElejirMotoItemStateChanged
        // TODO add your handling code here:

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Moto motoCon = (Moto) cbElejirMoto.getSelectedItem();
            try {
                PreparedStatement ps;
                ResultSet rs;
                Conexion conetar = new Conexion();
                Connection con = conetar.conexion();
                String sql = "select marca from moto where idmoto=" + motoCon.getIdMoto();
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
                while (rs.next()) {
                    lbMarca.setText(rs.getString("marca"));

                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            }
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                try {
                    PreparedStatement ps;
                    ResultSet rs;
                    Conexion conetar = new Conexion();
                    Connection con = conetar.conexion();
                    String sql = "select modelo from moto where idmoto=" + motoCon.getIdMoto();
                    ps = con.prepareStatement(sql);
                    rs = ps.executeQuery();
                    while (rs.next()) {
                        lbModelo.setText(rs.getString("modelo"));

                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e.toString());
                }
            }
        }
        String valorSeleccionadoMot = cbElejirMoto.getSelectedItem().toString();
        if (valorSeleccionadoMot.equals("selecione una placa")) {
            lbMarca.setText("");
            lbModelo.setText("");

        }
    }//GEN-LAST:event_cbElejirMotoItemStateChanged

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        // TODO add your handling code here:

        Repuesto reCon = (Repuesto) cbRepuesto.getSelectedItem();
        Moto motoConn = (Moto) cbElejirMoto.getSelectedItem();

        String valorSeleccionadoMot = cbElejirMoto.getSelectedItem().toString();
        String valorSeleccionadoSer = cbRepuesto.getSelectedItem().toString();

        if (valorSeleccionadoMot.equals("selecione una placa")) {
            JOptionPane.showMessageDialog(null, "selecione una placa");
        } else if (valorSeleccionadoSer.equals("seleciona un repuesto")) {
            JOptionPane.showMessageDialog(null, "selecione un repuesto");

        } else {
            venta.setIdMoto(motoConn.getIdMoto());
            venta.setIdServicio(99);
            venta.setIdRepuesto(reCon.getIdRepuesto());

            ventaControl.vebntaServicio(venta);
            JOptionPane.showMessageDialog(null, "se realizo el repuesto ala moto");
            //tabla();
            cbElejirMoto.setSelectedIndex(0);
            cbRepuesto.setSelectedIndex(0);
            lbMarca.setText("");
            lbModelo.setText("");
            lbPrecioRepuesto.setText("");

        }
    }//GEN-LAST:event_btnPagarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int idCliente = new Integer(mod.getIdCliente());
        try {
            Conexion conetar = new Conexion();
            Connection con = conetar.conexion();
            PreparedStatement ps = con.prepareStatement("call validartablarepuesto(?)");
            ps.setInt(1, idCliente);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                if (idCliente > 0) {
                    tabla(idCliente);

                } else {
                    JOptionPane.showMessageDialog(null, "no hay repuesto registrado");
                }
            }
            ps.close();
            con.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "ERROR");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void tabla(int id) {

        double total = 0;
        try {
            DefaultTableModel model = new DefaultTableModel();
            tablaRepuesto.setModel(model);
            Conexion conetar = new Conexion();
            Connection con = conetar.conexion();
            PreparedStatement ps = con.prepareStatement("call mostrarregistrorepuesto(?)");
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData metaData = ps.getMetaData();

            for (int i = 1; i <= metaData.getColumnCount(); i++) {
                model.addColumn(metaData.getColumnLabel(i));
            }
            while (rs.next()) {

                Object[] filas = new Object[metaData.getColumnCount()];
                for (int i = 0; i < metaData.getColumnCount(); i++) {
                    filas[i] = rs.getObject(i + 1);
                    if (i == 4) {
                        total += Double.parseDouble(filas[i].toString());
                    }
                }
                model.addRow(filas);
            }

            ps.close();
            ps.close();
            con.close();
            lbTotal.setText("" + total);

        } catch (SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "ERROR");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPagar;
    private javax.swing.JComboBox<String> cbElejirMoto;
    private javax.swing.JComboBox<String> cbRepuesto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbMarca;
    private javax.swing.JLabel lbModelo;
    private javax.swing.JLabel lbPrecioRepuesto;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTable tablaRepuesto;
    // End of variables declaration//GEN-END:variables
}
