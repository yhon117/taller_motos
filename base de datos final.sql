-- MySQL Script generated by MySQL Workbench
-- Tue May 30 01:06:20 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema taller
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema taller
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taller` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `taller` ;

-- -----------------------------------------------------
-- Table `taller`.`tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`tipo` (
  `idtipo` INT NOT NULL AUTO_INCREMENT,
  `tipoperfiles` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idtipo`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

insert into tipo(idtipo, tipoperfiles) values('1','cliente');
insert into tipo(idtipo, tipoperfiles) values('2','administrador');

-- -----------------------------------------------------
-- Table `taller`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `cedula` VARCHAR(18) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(45) NULL DEFAULT NULL,
  `correo` VARCHAR(45) NOT NULL,
  `usuario` VARCHAR(50) NULL DEFAULT NULL,
  `contrasena` VARCHAR(100) NULL DEFAULT NULL,
  `tipo_idtipo` INT NOT NULL,
  PRIMARY KEY (`id_cliente`),
  INDEX `fk_cliente_tipo1_idx` (`tipo_idtipo` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_tipo1`
    FOREIGN KEY (`tipo_idtipo`)
    REFERENCES `taller`.`tipo` (`idtipo`))
ENGINE = InnoDB
AUTO_INCREMENT = 24
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

INSERT INTO cliente(cedula, nombre, apellido, telefono, correo, usuario,contrasena,tipo_idtipo) 
VALUES('7382783947','yhon','rivera','7482784393','ydya@gmail.com','admin','admin123','2');
-- -----------------------------------------------------
-- Table `taller`.`moto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`moto` (
  `idmoto` INT NOT NULL AUTO_INCREMENT,
  `placa` VARCHAR(6) NOT NULL,
  `marca` VARCHAR(45) NOT NULL,
  `modelo` VARCHAR(45) NOT NULL,
  `kilometraje` VARCHAR(45) NOT NULL,
  `numeroChasis` VARCHAR(45) NOT NULL,
  `cliente_id_cliente` INT NOT NULL,
  PRIMARY KEY (`idmoto`),
  INDEX `fk_moto_cliente1_idx` (`cliente_id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_moto_cliente1`
    FOREIGN KEY (`cliente_id_cliente`)
    REFERENCES `taller`.`cliente` (`id_cliente`))
ENGINE = InnoDB
AUTO_INCREMENT = 31
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `taller`.`venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`venta` (
  `idventa` INT NOT NULL AUTO_INCREMENT,
  `moto_idmoto` INT NOT NULL,
  `nombreServicio` VARCHAR(255) NULL DEFAULT NULL,
  `precioServicio` DECIMAL(10,0) NULL DEFAULT NULL,
  `nombreRepuesto` VARCHAR(255) NULL DEFAULT NULL,
  `precioRepuesto` DECIMAL(10,0) NULL DEFAULT NULL,
  `fecha` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`idventa`),
  INDEX `fk_venta_moto1_idx` (`moto_idmoto` ASC) VISIBLE,
  CONSTRAINT `fk_venta_moto1`
    FOREIGN KEY (`moto_idmoto`)
    REFERENCES `taller`.`moto` (`idmoto`))
ENGINE = InnoDB
AUTO_INCREMENT = 47
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `taller`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`factura` (
  `idfactura` INT NOT NULL AUTO_INCREMENT,
  `monto` VARCHAR(45) NOT NULL,
  `cliente` VARCHAR(45) NOT NULL,
  `fechaventa` DATETIME NULL DEFAULT NULL,
  `venta_idventa` INT NOT NULL,
  `apellido` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idfactura`),
  INDEX `fk_factura_venta1_idx` (`venta_idventa` ASC) VISIBLE,
  CONSTRAINT `fk_factura_venta1`
    FOREIGN KEY (`venta_idventa`)
    REFERENCES `taller`.`venta` (`idventa`))
ENGINE = InnoDB
AUTO_INCREMENT = 106
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `taller`.`repuesto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`repuesto` (
  `idrepuesto` INT NOT NULL AUTO_INCREMENT,
  `nombreRepuesto` VARCHAR(45) NULL DEFAULT NULL,
  `costo` DECIMAL(10,0) NOT NULL,
  PRIMARY KEY (`idrepuesto`))
ENGINE = InnoDB
AUTO_INCREMENT = 101
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `taller`.`servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taller`.`servicios` (
  `id_srevicio` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(200) NOT NULL,
  `precio` DECIMAL(10,0) NULL DEFAULT NULL,
  PRIMARY KEY (`id_srevicio`))
ENGINE = InnoDB
AUTO_INCREMENT = 102
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `taller` ;

-- -----------------------------------------------------
-- procedure aptucliente
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `aptucliente`(clicedula varchar(18), clinombre varchar(45), cliapellido varchar(45), clitelefono varchar(45),
 clicorreo varchar(45), cliusuario varchar(50),clicontrasena varchar(100),clitipo_idtipo int, cliidcliente int)
BEGIN
UPDATE cliente SET cedula=clicedula, nombre=clinombre, apellido=cliapellido, telefono=clitelefono, correo=clicorreo, 
usuario=cliusuario,contrasena=clicontrasena,tipo_idtipo=clitipo_idtipo WHERE id_cliente=cliidcliente;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure aptumoto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `aptumoto`(moplaca varchar(6), momarca varchar(45), momodelo varchar(45), mokilometraje varchar(45), 
monumeroChasis varchar(45), moidmoto int)
BEGIN
UPDATE moto SET placa=moplaca, marca=momarca, modelo=momodelo, kilometraje=mokilometraje, numeroChasis=monumeroChasis 
WHERE idmoto=moidmoto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure apturepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `apturepuesto`(recombre varchar(45), recosto decimal(10.0), reidrepuesto int)
BEGIN
UPDATE repuesto SET nombreRepuesto=recombre,costo=recosto WHERE idrepuesto=reidrepuesto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure aptuservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `aptuservicio`(servom varchar(45), serdes varchar(200), serprecio decimal(10.0), serid int)
BEGIN
UPDATE  servicios SET nombre=servom, descripcion=serdes, precio=serprecio WHERE id_srevicio=serid;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure clientebox
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `clientebox`()
BEGIN
select * from cliente;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure elejirmarcamoro
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `elejirmarcamoro`(moid int)
BEGIN
select marca from moto where idmoto=moid;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure elejirmodelomoto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `elejirmodelomoto`(idmot int)
BEGIN
select modelo from moto where idmoto=idmot;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure elejirpreciorepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `elejirpreciorepuesto`(reid int)
BEGIN
select costo from repuesto where idrepuesto=reid;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure eliminarrepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `eliminarrepuesto`(reid int)
BEGIN
delete from repuesto where idrepuesto=reid;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure elimnarservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `elimnarservicio`(idser int)
BEGIN
delete from servicios where id_srevicio=idser;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existecedula
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existecedula`(clicedula varchar(18))
BEGIN
select * from cliente where cedula=clicedula;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existecontrasena
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existecontrasena`(clipass varchar(100))
BEGIN
select * from cliente where contrasena=clipass;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existeplaca
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existeplaca`(moplaca varchar(6))
BEGIN
select count(idmoto) from moto where placa=moplaca;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existerepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existerepuesto`(renombre varchar(45))
BEGIN
select * from repuesto where nombreRepuesto=renombre;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existeservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existeservicio`(senombre varchar(45))
BEGIN
select * from servicios where nombre=senombre;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure existeusuario
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `existeusuario`(cliuser varchar(50))
BEGIN
select * from cliente where usuario=cliuser;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure facturaservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `facturaservicio`(id_cliente int)
BEGIN
select fa.monto as'pago total', fa.cliente as'nombre', fa.apellido as 'apellido', fa.fechaventa as 'fecha de la venta', 
mo.placa as 'Placa', mo.marca as 'Marca', mo.modelo as 'Modelo',   se.nombre as 'Nombre',
se.precio as 'Precio' from factura fa

inner join venta ve on fa.venta_idventa = ve.idventa
inner join moto mo on ve.moto_idmoto = mo.idmoto
inner join servicios se on ve.servicios_id_srevicio = se.id_srevicio

where cliente_id_cliente  =id_cliente and id_srevicio !=99; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure historialrepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `historialrepuesto`()
BEGIN
select cli.nombre as 'Nombre del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',    ve.nombreRepuesto as 'Nombre del repuesto',
ve.precioRepuesto as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
    where precioRepuesto!=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure historialservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `historialservicio`()
BEGIN
select cli.nombre as 'Nombre del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   ve.nombreServicio as 'Nombre del servicio',
ve.precioServicio as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
    where precioServicio!=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarcliente
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarcliente`(clicedula varchar(18), clinombre varchar(45), cliapellido varchar(45), clitelefono varchar(45),
 clicorreo varchar(45), cliusuario varchar(50),clicontrasena varchar(100),clitipo_idtipo int)
BEGIN
INSERT INTO cliente(cedula, nombre, apellido, telefono, correo, usuario,contrasena,tipo_idtipo) 
VALUES(clicedula, clinombre, cliapellido, clitelefono,clicorreo, cliusuario,clicontrasena,clitipo_idtipo);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertarmoto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertarmoto`(moplaca varchar(6), momarca varchar(45), momodelo varchar(45), mokilometraje varchar(45), 
monumeroChasis varchar(45), mocliente_id_cliente int)
BEGIN
INSERT INTO moto(placa, marca, modelo, kilometraje, numeroChasis, cliente_id_cliente) 
VALUES (moplaca, momarca, momodelo, mokilometraje, monumeroChasis, mocliente_id_cliente);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure isertarrepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `isertarrepuesto`(renombre varchar(45), recosto decimal(10.0))
BEGIN
INSERT INTO repuesto(nombreRepuesto,costo) VALUES(renombre,recosto);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure isertarservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `isertarservicio`(senombre varchar(45), sedescripcio varchar(200), seprecio decimal(10.0))
BEGIN
INSERT INTO servicios(nombre, descripcion, precio) VALUES(senombre,sedescripcio,seprecio);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure isertarventa
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `isertarventa`(vemoto_idmoto int,venombreServicio varchar(255),veprecioServicio decimal(10.0),
venombreRepuesto varchar(255),veprecioRepuesto decimal(10.0))
BEGIN
INSERT INTO venta(moto_idmoto,nombreServicio,precioServicio,nombreRepuesto,precioRepuesto,fecha) 
VALUES (vemoto_idmoto ,venombreServicio ,veprecioServicio,venombreRepuesto,veprecioRepuesto,now());
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure login
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `login`(cliuser varchar(50), clipass varchar(100))
BEGIN
select id_cliente, cedula, nombre, apellido, telefono, correo, usuario,contrasena, tipo_idtipo from cliente 
where usuario=cliuser and contrasena=clipass;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure mostrarregistrorepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `mostrarregistrorepuesto`(mo_id_cliente int)
BEGIN
  select  mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   ve.nombreRepuesto as 'Nombre',
ve.precioRepuesto as 'Precio'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto    
  where cliente_id_cliente  =mo_id_cliente and precioRepuesto !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure mostrarregistroservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `mostrarregistroservicio`(mo_id_cliente int)
BEGIN
  select  mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   ve.nombreServicio as 'Nombre',
ve.precioServicio as 'Precio'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    
  where cliente_id_cliente  =mo_id_cliente and precioServicio !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure motocom
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `motocom`(idcli int)
BEGIN
select*from moto where cliente_id_cliente=idcli;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure registrarfactura
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `registrarfactura`(Monto varchar(45), Cliente varchar(45), Venta_idventa int, Apellido varchar(45))
BEGIN
	insert into factura(monto, cliente, fechaventa, venta_idventa, apellido) 
    values(Monto,Cliente, now(), Venta_idventa, Apellido);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporterepestocedula
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporterepestocedula`(cedulaid varchar(18))
BEGIN
select cli.nombre as 'Nombre del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   se.nombre as 'Nombre del servicio',
se.precio as 'Precio'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join servicios se on ve.servicios_id_srevicio = se.id_srevicio
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
  where id_srevicio=cedulaid and id_srevicio !=99;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporterepuestocedula
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporterepuestocedula`(cedulaid varchar(18))
BEGIN
select cli.nombre as 'Nombre del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',    re.nombreRepuesto as 'Nombre del repuesto',
re.costo as 'Precio'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join repuesto re on ve.repuesto_idrepuesto = re.idrepuesto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
  where cedula=cedulaid and idrepuesto !=99;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporterepuestoid
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporterepuestoid`(repuestoid varchar(255))
BEGIN
select cli.nombre as 'Nombre del cliente',cli.apellido as 'Apellido del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',    ve.nombreRepuesto as 'Nombre del repuesto',
ve.precioRepuesto as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
    where ve.nombreRepuesto=repuestoid and ve.precioRepuesto !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporterepuestousuario
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporterepuestousuario`(usuarioid varchar(50))
BEGIN
select cli.nombre as 'Nombre del cliente',cli.apellido as 'Apellido del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',    ve.nombreRepuesto as 'Nombre del repuesto',
ve.precioRepuesto as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
    where usuario=usuarioid and ve.precioRepuesto !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporteserviciocedula
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporteserviciocedula`(cedulaid varchar(18))
BEGIN
select cli.nombre as 'Nombre del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   se.nombre as 'Nombre del servicio',
se.precio as 'Precio'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join servicios se on ve.servicios_id_srevicio = se.id_srevicio
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
  where cedula=cedulaid and id_srevicio !=99;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporteservicioid
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporteservicioid`(servicioid varchar(255))
BEGIN
select cli.nombre as 'Nombre del cliente',cli.apellido as 'Apellido del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   ve.nombreServicio as 'Nombre del servicio',
ve.precioServicio as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
  where nombreServicio=servicioid and precioServicio !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure reporteserviciousuario
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `reporteserviciousuario`(usuarioid varchar(50))
BEGIN
select cli.nombre as 'Nombre del cliente', cli.apellido as 'Apellido del cliente', mo.placa as 'Placa', mo.marca as 'Marca',
    mo.modelo as 'Modelo',   ve.nombreServicio as 'Nombre del servicio',
ve.precioServicio as 'Precio',ve.fecha as 'Fecha de la venta'
    from venta ve
    inner join moto mo on ve.moto_idmoto = mo.idmoto
    inner join cliente cli on mo.cliente_id_cliente=cli.id_cliente
  where usuario=usuarioid and precioServicio !=0.0;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure repuestocom
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `repuestocom`()
BEGIN
select * from repuesto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure repuestomasvendido
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `repuestomasvendido`()
BEGIN
SELECT v.nombreRepuesto, COUNT(*) as total_ventas
FROM venta v
where precioRepuesto !=0.0 GROUP BY v.nombreRepuesto
ORDER BY total_ventas DESC;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure repuestomenosvendido
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `repuestomenosvendido`()
BEGIN
SELECT v.nombreRepuesto, COUNT(*) as total_ventas
FROM venta v
where precioRepuesto !=0.0 GROUP BY v.nombreRepuesto
ORDER BY total_ventas asc;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure serviciomasvendido
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `serviciomasvendido`()
BEGIN
SELECT v.nombreServicio, COUNT(*) as total_ventas
FROM venta v
where precioServicio !=0.0 GROUP BY v.nombreServicio
ORDER BY total_ventas DESC;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure serviciomenosvendido
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `serviciomenosvendido`()
BEGIN
SELECT v.nombreServicio, COUNT(*) as total_ventas
FROM venta v
where precioServicio !=0.0 GROUP BY v.nombreServicio
ORDER BY total_ventas asc;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure servicocom
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `servicocom`()
BEGIN
select * from servicios;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure tipocom
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `tipocom`()
BEGIN
select * from tipo;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure todolasmotos
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `todolasmotos`()
BEGIN
select idmoto, cli.nombre as'Nombre del cliente', cli.apellido as'Apellido del cliente',placa, marca, modelo,kilometraje, numeroChasis from moto
inner join cliente cli on moto.cliente_id_cliente=cli.id_cliente;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure todolosclientes
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `todolosclientes`()
BEGIN
select id_cliente, nombre, apellido,cedula, telefono, correo, usuario, contrasena as'contraseña', ti.tipoperfiles as'rol'
from cliente
inner join tipo ti on cliente.tipo_idtipo=ti.idtipo;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure todolosrepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `todolosrepuesto`()
BEGIN
select idrepuesto, nombreRepuesto, costo from repuesto;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure todolosservicio
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `todolosservicio`()
BEGIN
select id_srevicio as'idServicio',nombre, descripcion, precio from servicios;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure validartabla
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `validartabla`(mo_id_cliente int)
BEGIN
SELECT COUNT(ve.idventa), ve.precioServicio, ve.moto_idmoto FROM venta ve
inner join moto mo on ve.moto_idmoto = mo.idmoto

where cliente_id_cliente  = mo_id_cliente and precioServicio !=0.0 group by ve.idventa;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure validartablarepuesto
-- -----------------------------------------------------

DELIMITER $$
USE `taller`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `validartablarepuesto`(mo_id_cliente int)
BEGIN
SELECT COUNT(ve.idventa), ve.moto_idmoto, ve.precioRepuesto FROM venta ve
inner join moto mo on ve.moto_idmoto = mo.idmoto
where cliente_id_cliente  = mo_id_cliente and precioRepuesto !=0.0 group by ve.idventa;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
